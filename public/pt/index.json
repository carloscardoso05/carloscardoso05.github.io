


[{"content":"\rnunocoracao/blowfish\rPersonal Website \u0026amp; Blog Theme for Hugo\rHTML\r2266\r588\r","date":"9 setembro 2025","externalUrl":null,"permalink":"/pt/","section":"","summary":"","title":"","type":"page"},{"content":"","date":"9 setembro 2025","externalUrl":null,"permalink":"/pt/tags/nestjs/","section":"Tags","summary":"","title":"NestJS","type":"tags"},{"content":"","date":"9 setembro 2025","externalUrl":null,"permalink":"/pt/tags/node.js/","section":"Tags","summary":"","title":"Node.js","type":"tags"},{"content":"","date":"9 setembro 2025","externalUrl":null,"permalink":"/pt/projects/","section":"Projects","summary":"","title":"Projects","type":"projects"},{"content":"\rOverview #\rOla RUBot is a Telegram bot built with NestJS that provides the weekly and daily menu of the universitary restaurant at UFPA (Universidade Federal do Pará).\nIt automatically scrapes the official RU website, formats the menu, and delivers it through a simple and user-friendly Telegram interface.\nIt also counts with a RESTful API that provides the complete the daily or weekly menu on JSON format, but it\u0026rsquo;s not publicly available yet.\ncarloscardoso05/rubjs\rHTML\r0\r0\rFeatures #\rTelegram Bot Integration: Built with Telegraf and nestjs-telegraf for seamless Telegram API communication. Telegram commands: /hoje → Returns today’s menu. /semana → Returns the entire week’s menu. Web Scraping: Uses Cheerio to extract daily and weekly menus directly from UFPA’s RU website. Rate Limiting: Prevents abuse with request throttling using telegraf-ratelimit. REST API Endpoints: /hoje → Returns today’s menu. /semana → Returns the entire week’s menu. Formatted Messages: Meals are displayed with icons, highlighting main dish, vegetarian option, and side dishes. Tech Stack #\rProgramming language: TypeScript Backend Framework: NestJS Scraping: Cheerio Messaging: Telegraf, nestjs-telegraf Other Tools: ESLint + Prettier (linting/formatting) Jest (unit and e2e testing) dotenv (environment configuration) Project Structure #\rsrc/scraper/ → Handles menu extraction from the RU website. src/formatter/ → Formats scraped data into structured, readable text for Telegram. src/bot/ → Manages Telegram commands and bot interactions. src/app.controller.ts → REST endpoints for fetching menus programmatically. Example Interaction #\rUser sends /hoje → Bot responds with today’s lunch and dinner options. User sends /semana → Bot lists the menu for each weekday. Installation \u0026amp; Run #\rIf you want to reproduce this project, you first need to create a Telegram bot. Acess this tutorial for more information: https://core.telegram.org/bots/tutorial.\nYou also need to create a .env file at the root folder, it must contain the key TELEGRAM_KEY with yout bot key.\nTELEGRAM_KEY=\u0026lt;your_key\u0026gt; After this setup, you can install the dependencies and run the project.\n# Install dependencies npm install # Development mode npm run start:dev # Production npm run start:prod ","date":"9 setembro 2025","externalUrl":null,"permalink":"/pt/projects/rub/","section":"Projects","summary":"A Telegram Bot for UFPA\u0026rsquo;s universitary restaurant","title":"RUBot","type":"projects"},{"content":"","date":"9 setembro 2025","externalUrl":null,"permalink":"/pt/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"9 setembro 2025","externalUrl":null,"permalink":"/pt/tags/typescript/","section":"Tags","summary":"","title":"TypeScript","type":"tags"},{"content":"","date":"9 setembro 2025","externalUrl":null,"permalink":"/pt/tags/web-scraping/","section":"Tags","summary":"","title":"Web Scraping","type":"tags"},{"content":"","externalUrl":null,"permalink":"/pt/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/pt/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","externalUrl":null,"permalink":"/pt/series/","section":"Series","summary":"","title":"Series","type":"series"}]