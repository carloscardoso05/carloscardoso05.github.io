


[{"content":"\rnunocoracao/blowfish\rPersonal Website \u0026amp; Blog Theme for Hugo\rHTML\r2266\r588\r","date":"9 September 2025","externalUrl":null,"permalink":"/en/","section":"","summary":"","title":"","type":"page"},{"content":"","date":"9 September 2025","externalUrl":null,"permalink":"/en/tags/nestjs/","section":"Tags","summary":"","title":"NestJS","type":"tags"},{"content":"","date":"9 September 2025","externalUrl":null,"permalink":"/en/tags/node.js/","section":"Tags","summary":"","title":"Node.js","type":"tags"},{"content":"","date":"9 September 2025","externalUrl":null,"permalink":"/en/projects/","section":"Projects","summary":"","title":"Projects","type":"projects"},{"content":"\rOverview #\rRUBot is a Telegram bot built with NestJS that delivers the daily and weekly menu of UFPA’s university restaurant. It scrapes the official RU website, formats the menu, and sends it through a user-friendly Telegram interface. The project also includes a RESTful API for retrieving menus in JSON format (currently private).\ncarloscardoso05/rubjs\rHTML\r0\r0\rFeatures #\rTelegram Bot Integration: Built with Telegraf and nestjs-telegraf for seamless Telegram API communication. Telegram commands: /hoje → Returns today’s menu. /semana → Returns the entire week’s menu. Web Scraping: Uses Cheerio to extract daily and weekly menus directly from UFPA’s RU website. Rate Limiting: Prevents abuse with request throttling using telegraf-ratelimit. REST API Endpoints: /hoje → Returns today’s menu. /semana → Returns the entire week’s menu. Formatted Messages: Meals are displayed with icons, highlighting main dish, vegetarian option, and side dishes. Tech Stack #\rProgramming language: TypeScript Backend Framework: NestJS Scraping: Cheerio Messaging: Telegraf, nestjs-telegraf Other Tools: ESLint + Prettier (linting/formatting) Jest (unit and e2e testing) dotenv (environment configuration) Project Structure #\rsrc/scraper/ → Handles menu extraction from the RU website. src/formatter/ → Formats scraped data into structured, readable text for Telegram. src/bot/ → Manages Telegram commands and bot interactions. src/app.controller.ts → REST endpoints for fetching menus programmatically. Example Interaction #\rUser sends /hoje → Bot responds with today’s lunch and dinner options. User sends /semana → Bot lists the menu for each weekday. Installation \u0026amp; Run #\rIf you want to reproduce this project, you first need to create a Telegram bot. Acess this tutorial for more information: https://core.telegram.org/bots/tutorial.\nYou also need to create a .env file at the root folder, it must contain the key TELEGRAM_KEY with yout bot key.\nTELEGRAM_KEY=\u0026lt;your_key\u0026gt; After this setup, you can install the dependencies and run the project.\n# Install dependencies npm install # Development mode npm run start:dev # Production npm run start:prod ","date":"9 September 2025","externalUrl":null,"permalink":"/en/projects/rub/","section":"Projects","summary":"A Telegram Bot for UFPA\u0026rsquo;s university restaurant","title":"RUBot","type":"projects"},{"content":"","date":"9 September 2025","externalUrl":null,"permalink":"/en/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"9 September 2025","externalUrl":null,"permalink":"/en/tags/typescript/","section":"Tags","summary":"","title":"TypeScript","type":"tags"},{"content":"","date":"9 September 2025","externalUrl":null,"permalink":"/en/tags/web-scraping/","section":"Tags","summary":"","title":"Web Scraping","type":"tags"},{"content":"","externalUrl":null,"permalink":"/en/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/en/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","externalUrl":null,"permalink":"/en/series/","section":"Series","summary":"","title":"Series","type":"series"}]